vale perfecto ya están todos los pasos que quería realizar. Ahora sigamos trabajando con el proyecto.

- Comenzaremos creando una nueva vista que llamaremos galeria.view.php.
- Será un "copia-pega" del formulario contacto pero lo modificaremos añadiendo enctype="multipart/form-data" y un campo Imagen de tipo file.

- Quedaría de la siguiente forma:

<?php include __DIR__ . '/partials/inicio-doc.part.php' ?>
<?php include __DIR__ . '/partials/nav.part.php' ?>

<!-- Principal Content Start -->
 <div id="galeria">
    <div class="container">
        <div class="col-xs-12 col-sm-8 col-sm-push-2">
            <h1>GALERIA</h1>
            <hr>
            <?php if ($_REQUEST['REQUEST_METHOD'] === 'POST'): ?>
                <div class="alert alert-<?=empty($errores)?'info' : 'danger';?> alert-dismissibre" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>
                    <?php if(empty($errores)) : ?>
                        <p><?= $mensaje ?></p>
                    <?php else: ?>
                        <ul>
                            <?php foreach ($errores as $error) : ?>
                                <li><?= $error ?></li>
                            <?php endforeach; ?>
                        </ul>
                    <?php endif; ?>
                </div>
            <?php endif; ?>
            <form class="form-horizontal" method="post" enctype="multipart/form-data" action="<?= $_SERVER['PHP_SELF'] ?>">
                <div class="form-group">
                    <div class="col-xs-12">
                        <label class="label-control">Imagen</label>
                        <input class="form-control-file" type="file" name="imagen">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <label class="label-control">Descripción</label>
                        <textarea class="form-control" name="descripcion"> <?= $descripcion ?></textarea>
                        <button class="pull-right btn btn-lg sr-button">ENVIAR</button>
                    </div>
                </div>
            </form>
            <hr class="divider">
            <div class="imagenes_galeria">

            </div>
        </div>
    </div>
 </div>
 <?php include __DIR__ . '/partials/fin-doc.part.php' ?>

- Ahora crearemos el fichero galeria.php correspondiente donde inicializamos el array de errores y el resto de variables que utilizaremos en la vista:

<?php 
require_once __DIR__ . '/utils/utils.php';

$errores = [];
$descripcion = '';
$mensaje = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $descripcion = trim(htmlspecialchars($_POST['descripcion']));
    $mensaje = 'Datos enviados';
}

require 'views/galeria.view.php';

- Antes de darle funcionalidad y controlar los errores vamos a comprobar que el formulario se carga y funciona.

- Para darle funcionalidad al formulario y manejar ficheros en PHP debemos controlar las posibles excepciones que se produzcan.

- El tipo base para las excepciones en PHP es la clase Exception que recogen las excepciones de usuario (las que nosotros vamos a utilizar). Hay otro tipo de excepciones, que son los errores del sistema (Error), que a partir de PHP 7 ya se pueden capturar.

- También podemos ampliar las excepciones heredando de la clase base Exception (class MiExcepcion estends Exception{...}) y así podremos crear nuestrar propias excepciones o editar el manejo de estas.

- Continuamos con nuestro proyecto creando una clase que llamaremos File dentro del directorio entities.

- Contendrá dos atributos:

1. El fichero que se suba al servidor (atributos guardados en el array $_FILES)
2. El nombre de dicho fichero cuando se subió($fileName), recuerda el formato es $_FILES

- El constructor recibirá el nombre del fichero y un array con los tipos de ficheros que acepta nuestra clase:

- Esta sería la estructura de la clase:

<?php
class File
{
    private $file;
    private $fileName;

    public function __construct(string $fileName, array $arrTypes)
    {
        // CON $fileName obtendremos el fichero mediante el array $_FILES que contiene todos los ficheros que se suben al servidor mediante un formulario.

        $this->file = $_FILES[$fileName];
        $this->fileName = '';

        // Comprobamos que es array contiene el fichero
        if (!isset($this->file)) {
            throw new Exception('No se ha encontrado el fichero');
        }

        // Verificamos si ha habido algún error durante la subida del fichero
        if ($this->file['error'] !== UPLOAD_ERR_OK) {
            switch ($this->file['error']) {
                case UPLOAD_ERR_INI_SIZE:
                case UPLOAD_ERR_FORM_SIZE: {
                    throw new Exception('El fichero es demasiado grande');
                    break;
                }
                case UPLOAD_ERR_PARTIAL: {
                    throw new Exception('El fichero no se ha subido completamente');
                    break;
                }
                default: {
                    throw new Exception('Error al subir el fichero');
                    break;
                }
            }
        }

        // Comprobamos si el ficheor subido es de un tipo de los que tenemos soportados
        if (in_array($this->file['type'], $arrTypes) === false) {
            throw new Exception('Tipo de fichero no soportado');
        }
    }

    public function getFileName()
    {
        return $this->fileName;
    }
}
